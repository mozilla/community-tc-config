# This file defines "grants" of scopes to roles.  Roles can be repeated, and
# scopes will be merged.
#
# This file should be used for general-purpose roles such as parameterized
# roles and global grants.  Grants related to a specific project should be in
# projects.yml, instead.
#
# Available roles to grant to:
#   github-org-admin:<org> -- admins of the given org
#   github-team:<org>/<team> -- members of the given team
#   login-identity:<identity> -- a specfic user (try to avoid this!)
#   repo:github.com/<org>/<repo>:<event> -- see
#      https://docs.taskcluster.net/docs/reference/integrations/github/taskcluster-yml-v1#scopes-and-roles
#
# Each item has:
#   grant: a list of scopes to grant
#   to: a role or list of roles to grant the scopes to

# project-admin:* parameterized role, defining "admin" scopes for a project
- grant:
    # project-specific scopes
    - project:<..>:*

    # project-specific roles
    - assume:project:<..>:*
    - auth:create-role:project:<..>:*
    - auth:delete-role:project:<..>:*
    - auth:update-role:project:<..>:*

    # project-specific clients
    - auth:create-client:project/<..>/*
    - auth:delete-client:project/<..>/*
    - auth:disable-client:project/<..>/*
    - auth:enable-client:project/<..>/*
    - auth:update-client:project/<..>/*
    - auth:reset-access-token:project/<..>/*

    # project-specific taskQueueIds
    - queue:create-task:lowest:proj-<..>/*
    - queue:create-task:very-low:proj-<..>/*
    - queue:create-task:low:proj-<..>/*
    - queue:create-task:medium:proj-<..>/*
    - queue:create-task:high:proj-<..>/*
    - queue:create-task:very-high:proj-<..>/*
    - queue:create-task:highest:proj-<..>/*
    - queue:claim-work:proj-<..>/*

    # project-specific private artifacts
    - queue:get-artifact:project/<..>/*

    # project-specific hooks
    - assume:hook-id:project-<..>/*
    - auth:create-role:hook-id:project-<..>/*
    - auth:delete-role:hook-id:project-<..>/*
    - auth:update-role:hook-id:project-<..>/*
    - hooks:modify-hook:project-<..>/*
    - hooks:trigger-hook:project-<..>/*

    # project-specific workers
    - assume:worker-id:proj-<..>/*
    - queue:quarantine-worker:proj-<..>/*
    - worker-manager:create-worker:proj-<..>/*
    - worker-manager:remove-worker:proj-<..>/*

    # project-specific index routes
    - index:insert-task:project.<..>.*
    - queue:route:index.project.<..>.*

    # project-specific worker pools and workers
    - worker-manager:manage-worker-pool:proj-<..>/*
    - assume:worker-pool:proj-<..>/*

    # project-specific worker pools secrets
    - secrets:get:worker-pool:proj-<..>/*
    - secrets:set:worker-pool:proj-<..>/*

    # project-specific secrets
    - secrets:get:project/<..>/*
    - secrets:set:project/<..>/*

    # allow all caches, since workers are per-project
    - docker-worker:cache:*
    - generic-worker:cache:*

    # allow purging caches for project worker-pools
    - purge-cache:proj-<..>/*

    # allow use of all providers
    - worker-manager:provider:null-provider
    - worker-manager:provider:community-tc-workers-*
  to: project-admin:*

# repo-admin:* parameterized role, defining administrative scopes over a github repo
- grant:
    - auth:create-role:repo:<..>
    - auth:delete-role:repo:<..>
    - auth:update-role:repo:<..>
    - assume:repo:<..>
  to: repo-admin:*

- grant:
    # support users' creation of clients
    - auth:create-client:<..>/*
    - auth:delete-client:<..>/*
    - auth:update-client:<..>/*
    - auth:reset-access-token:<..>/*
    # grant all users access to scheduler-id `-`, the default, as well as
    # the task-creator default "taskcluster-ui"
    - queue:scheduler-id:-
    - queue:scheduler-id:taskcluster-ui
  to:
    - login-identity:*

- grant:
    # worker pool implies claiming work
    - "queue:claim-work:<..>"
    # Grant permission to use websocktunnel with audience `communitytc` to all
    # workers in all pools
    - "auth:websocktunnel-token:communitytc/*"
  to: worker-pool:*

# Make assume:worker-id:<id> imply queue:worker-id:<id>
- grant: "queue:worker-id:<..>"
  to: "worker-id:*"

# As a temporary measure until we invent a better solution, we allow a number
# of lucky people to rerun, cancel, and schedule all tasks created by
# taskcluster-github, and to create tasks with that schedulerId (e.g., for
# interactive).  Similarly for the `- schedulerId, the default.
- grant:
    - queue:cancel-task:taskcluster-github/*
    - queue:schedule-task:taskcluster-github/*
    - queue:rerun-task:taskcluster-github/*
    - queue:scheduler-id:taskcluster-github

    - queue:cancel-task:-/*
    - queue:schedule-task:-/*
    - queue:rerun-task:-/*

    # permission to run interactive tsaks
    - queue:get-artifact:private/docker-worker/*
  to:
    # note, specific users are temporary until mozilla org grants permissions
    # to read teams, https://bugzilla.mozilla.org/show_bug.cgi?id=1593632

    # admins
    - github-team:taskcluster/core

    # glandium, for git-cinnabar
    - login-identity:github/1038527|glandium

    # deepspeech
    - github-team:mozilla/research-machine-learning
    - login-identity:github/1645737|lissyx
    - login-identity:github/477142|reuben

    # for firefoxreality
    - github-org-admin:MozillaReality

    # for a few project admins
    - project-admin:servo
    - project-admin:wpt

    # for relman
    - project-admin:relman

# One of these routes is added to each task created in reaction to a GitHub event.
# If such a task in turn creates other tasks, it can add the same route in order to work around
# https://bugzilla.mozilla.org/show_bug.cgi?id=1548781 or
# https://bugzilla.mozilla.org/show_bug.cgi?id=1533235
- grant:
    # Route names match configuration at
    # https://github.com/taskcluster/taskcluster/blob/21f257dc8/services/github/config.yml#L13-L14
    - queue:route:checks
    - queue:route:statuses
  to:
    # Repositories that whish to use this work-around
    - repo:github.com/servo/servo:*
