# "Projects", as defined in https://docs.taskcluster.net/docs/manual/using/namespaces#projects
#
# Each project is a distinct namespace within the deployment, with access to its own resources.
# In particular, each project has its own workers. A project also has a set of administrators
# defined by user roles.
#
# Each entry in this file is defined as follows:
#
# <project-name>:
#   adminRoles:
#     # roles with administrative access to the project's resources
#     - role1
#     - ..
#
#   # "externally managed" means that the resources in this project are managed outside
#   # of this repository.  If this is false, then all project resources are managed by
#   # this repo, and anything unrecognized will be deleted.  If this is true, then only
#   # resources declared here will be managed.  If set to a regular expression or list
#   # of regular expressions, then resources matching those regular expressions will be
#   # ignored by this repository, but all others will be managed.
#   externallyManaged: false
#
#   repos:
#     # repositories over which project admins have control; this is a prefix of a tc-github
#     # repository roleId, so it should end in `:*` to select a specific repository, or `/*`
#     # for an organization:
#     - github.com/org/*
#     - github.com/org/repo:*
#
#   workerPools:
#     <worker-pool-name>:
#       owner: ..
#       emailOnError: ..
#       instanceTypes: a dict, where each key is an instance type, and the
#           value is the capacity per instance for that instance type.
#       imageset: top level key from imagesets.yml
#       cloud: cloud to deploy in ('aws' or 'gcp')
#       ..: ..  # arguments to that function
#
#   secrets:
#     # Secrets associated with this project, suffixed to `project/<project-name>/`.
#     # These secrets can be managed externally by setting the value to `true`:
#     <name-suffix>: true
#     # or can be given an explicit value, with interpolation of values from the
#     # secret-values backend using `$<name>`:
#     <name-suffix>:
#       someservice:
#         hostname: someservice.com
#         username: $someservice-username
#         password: $someservice-password
#
#   hooks:
#     # hooks, keyed by hookId.
#     <hookId>:
#       name:           # hook name, defaulting to hookId
#       description:    # (optional)
#       owner:          # (required) email of the owner
#       emailOnError:   # (optional) if true, email the owner on firing errors
#       schedule:       # (optional) list of cron schedules
#       task:           # (required) task template
#       triggerSchema:  # (optional) schema for trigger payloads
#
#   clients:
#     <clientId-suffix>:  # suffix after `project/<project-name>/`
#       scopes: [ .. ]
#       description: ..   # optional
#     # when creating a client for a standalone worker, use `assume:worker-id:..` and `assume:worker-pool:..`.
#
#   grants:  # (same format as grants.yml)
#
# The worker-pool configurations are defined by Python functions, keyed by the `type` property.
# See that file for the available options.  The defaults are usually fine.

taskcluster:
  adminRoles:
    - github-team:taskcluster/core
  repos:
    - github.com/taskcluster/*
    - github.com/mozilla/community-tc-config:*
  externallyManaged:
    # smoketests create these resources, and also cleans them up, so leave
    # them alone here...
    - "Client=project/taskcluster/smoketest/.*"
    - "Role=project:taskcluster:smoketest:.*"
  workerPools:
    ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 20
      workerConfig:
        dockerConfig:
          allowPrivileged: true
          disableSeccomp: true

    windows2012r2-amd64-ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2
      cloud: gcp
      maxCapacity: 10

    release:
      owner: taskcluster-notifications+workers@mozilla.com
      description: "Trusted worker to build Taskcluster releases (only!)"
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04
      cloud: aws
      maxCapacity: 1
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    # gw-ci-* worker pools are for generic-worker CI
    gw-ci-ubuntu-18-04:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04
      cloud: aws
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-ubuntu-18-04-staging:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04-staging
      cloud: aws
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-windows2012r2-amd64:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2
      cloud: gcp
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-windows2012r2-amd64-staging:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2-staging
      cloud: gcp
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

  grants:
    - grant:
        - queue:create-task:highest:proj-taskcluster/ci
        - queue:create-task:highest:proj-taskcluster/windows2012r2-amd64-ci
        # The account and secret for the Azure testing storage account.
        # This is secret but ok for use by PRs.
        - secrets:get:project/taskcluster/testing/azure
      to: repo:github.com/taskcluster/*

    - grant:
        - secrets:get:project/taskcluster/testing/codecov
        - secrets:get:project/taskcluster/testing/taskcluster-*
        - docker-worker:cache:taskcluster-*
      to: repo:github.com/taskcluster/taskcluster:*

    - grant:
        - queue:create-task:highest:proj-taskcluster/release
        - secrets:get:project/taskcluster/release
      to: repo:github.com/taskcluster/taskcluster:tag:v*

    - grant:
        # pushes to master and releases can notify on failure
        - queue:route:notify.email.taskcluster-internal@mozilla.com.*
        - queue:route:notify.email.taskcluster-notifications@mozilla.com.*
        - queue:route:notify.irc-channel.#taskcluster-bots.*
      to:
        - repo:github.com/taskcluster/taskcluster:branch:master
        - repo:github.com/taskcluster/taskcluster:tag:v*

    - grant:
        # pushes to json-e master can read secrets for deploying the site
        - secrets:get:project/taskcluster/json-e-deploy
        # ..and notify on failure
        - queue:route:notify.email.taskcluster-notifications@mozilla.com.*
      to: repo:github.com/taskcluster/json-e:branch:master

    - grant:
        - assume:project:taskcluster:worker-test-scopes
        - assume:worker-id:docker-worker/docker-worker
        - assume:worker-id:random-local-worker/docker-worker
        - aws-provisioner:create-secret:*
        - docker-worker:cache:docker-worker-garbage-*
        - docker-worker:capability:device:loopbackAudio
        - docker-worker:capability:device:loopbackVideo
        - docker-worker:capability:device:hostSharedMemory
        - docker-worker:capability:disableSeccomp
        - docker-worker:capability:privileged
        - docker-worker:feature:balrogStageVPNProxy
        - docker-worker:feature:balrogVPNProxy
        - docker-worker:image:localhost:*
        - purge-cache:null-provisioner/*
        - queue:cancel-task
        - queue:cancel-task:docker-worker-tests/*
        - queue:claim-task
        - queue:claim-task:null-provisioner/*
        - queue:claim-work:null-provisioner/*
        - queue:create-artifact:*
        - queue:create-task:null-provisioner/*
        - queue:create-task:proj-taskcluster/ci
        - queue:get-artifact:private/docker-worker-tests/*
        - queue:resolve-task
        - queue:route:statuses
        - queue:scheduler-id:docker-worker-tests
        - queue:scheduler-id:taskcluster-github
        - queue:worker-id:docker-worker/docker-worker
        - queue:worker-id:random-local-worker/dummy-worker-*
        - queue:worker-id:random-local-worker/docker-worker
        - secrets:get:project/taskcluster/taskcluster-worker/stateless-dns
        - secrets:get:project/taskcluster/testing/docker-worker/ci-creds
        - secrets:get:project/taskcluster/testing/docker-worker/pulse-creds
      to: repo:github.com/taskcluster/docker-worker:*

    - grant:
        - secrets:get:project/taskcluster/monopacker/gcloud_service_account
        - secrets:get:project/taskcluster/monopacker/worker_secrets_yaml
      to: repo:github.com/taskcluster/monopacker:branch:master

    - grant:
        - auth:create-client:project/taskcluster/smoketest/*
        - auth:create-role:project:taskcluster:smoketest:*
        - auth:delete-client:project/taskcluster/smoketest/*
        - auth:delete-role:project:taskcluster:smoketest:*
        - auth:reset-access-token:project/taskcluster/smoketest/*
        - auth:update-client:project/taskcluster/smoketest/*
        - auth:update-role:project:taskcluster:smoketest:*
        - project:taskcluster:smoketest:*
        - purge-cache:built-in/succeed:smoketest-cache
        - queue:create-task:highest:built-in/*
        - queue:create-task:highest:built-in/fail
        - queue:create-task:highest:built-in/succeed
        - queue:route:index.project.taskcluster.smoketest.*
        - queue:scheduler-id:-
        - secrets:get:project/taskcluster/smoketest/*
        - secrets:set:project/taskcluster/smoketest/*
      to: project:taskcluster:smoketests

    - grant: assume:project:taskcluster:smoketests
      to: github-team:taskcluster/smoketesters

    - grant:
        - assume:worker-id:test-worker-group/test-worker-id
        - assume:worker-type:test-provisioner/*
        - auth:create-client:project/taskcluster:generic-worker-tester/TestReclaimCancelledTask
        - auth:create-client:project/taskcluster:generic-worker-tester/TestResolveResolvedTask
        - auth:sentry:generic-worker-tests
        - generic-worker:cache:banana-cache
        - generic-worker:cache:devtools-app
        - generic-worker:cache:test-modifications
        - generic-worker:cache:unknown-issuer-app-cache
        - generic-worker:os-group:test-provisioner/*
        - generic-worker:run-as-administrator:test-provisioner/*
        - queue:cancel-task:test-scheduler/*
        - assume:worker-pool:test-provisioner/*
        - queue:create-artifact:public/*
        - queue:create-task:test-provisioner/*
        - queue:get-artifact:SampleArtifacts/_/X.txt
        - queue:get-artifact:SampleArtifacts/_/non-existent-artifact.txt
        - queue:get-artifact:SampleArtifacts/b/c/d.jpg
        - queue:resolve-task
        - assume:worker-id:test-worker-group/*"
      to: project:taskcluster:generic-worker-tester

    - grant:
        - assume:project:taskcluster:generic-worker-tester
        - queue:create-task:highest:proj-taskcluster/gw-ci-*
        - generic-worker:cache:generic-worker-checkout
        - secrets:get:project/taskcluster/testing/generic-worker/ci-creds
      to:
        - repo:github.com/taskcluster/generic-worker:*
        - repo:github.com/taskcluster/taskcluster:*

  clients:
    smoketests:
      scopes:
        - assume:project:taskcluster:smoketests
    docker-worker/ci:
      scopes:
        - assume:repo:github.com/taskcluster/docker-worker:*
    # Client for workerpool proj-taskcluster/gw-ci-macos.
    generic-worker/ci-macos:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-macos
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-macos-staging.
    generic-worker/ci-macos-staging:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-macos-staging
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-raspbian-stretch
    generic-worker/ci-raspbian-stretch:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-raspbian-stretch
        - assume:worker-id:proj-taskcluster/*
    # Client for proj-taskcluster/gw-ci-windows10-amd64. This client is
    # currently used by a single manually configured worker, running in Azure.
    # When we have an azure provider, we can terminate this worker, delete this
    # client, and use worker manager provisioned instances instead.
    generic-worker/ci-windows10-amd64:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-windows10-amd64
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-windows10-arm
    generic-worker/ci-windows10-arm:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-windows10-arm
        - assume:worker-id:proj-taskcluster/*
    # A client whose clientId and accessToken are stored in taskcluster secret
    # `project/taskcluster/testing/generic-worker/ci-creds` and used by
    # commands in generic-worker's .taskcluster.yml to create production tasks
    # that are then claimed and processed by the generic-worker build under
    # test.
    generic-worker/taskcluster-ci:
      scopes:
        - assume:project:taskcluster:generic-worker-tester
    # A client whose accessToken is securely stored in travis-ci.org
    # taskcluster/generic-worker project as encrypted environment variable
    # TASKCLUSTER_ACCESS_TOKEN, and used by commands in generic-worker's
    # .travis.yml to create production tasks that are then claimed and
    # processed by the generic-worker build under test in travis-ci.org.
    generic-worker/travis-ci:
      scopes:
        - assume:project:taskcluster:generic-worker-tester

  secrets:
    # codecov API token
    testing/codecov: true
    # client_id/access_token for project/taskcluster/testing/docker-worker/ci-creds
    testing/docker-worker/ci-creds: true
    # client_id/access_token for generic-worker integration tests
    testing/generic-worker/ci-creds: true
    testing/azure:
      AZURE_ACCOUNT: $taskcluster-azure-account
      AZURE_ACCOUNT_KEY: $taskcluster-azure-account-key
    # additional secrets for services' tests (see services/<service>/test/helper.js)
    testing/taskcluster-auth: true
    testing/taskcluster-notify: true
    testing/taskcluster-queue: true
    # key for deploying json-e docs
    json-e-deploy: true
    # monopacker image baking secrets
    monopacker/gcloud_service_account: true
    monopacker/worker_secrets_yaml: true
    release:
      DOCKER_USERNAME: $taskcluster-release-docker-hub-username
      DOCKER_PASSWORD: $taskcluster-release-docker-hub-password
      PYPI_USERNAME: $taskcluster-release-pypi-username
      PYPI_PASSWORD: $taskcluster-release-pypi-password
      NPM_TOKEN: $taskcluster-release-npm-token
      GH_TOKEN: $taskcluster-release-gh-token


bors-ng:
  adminRoles: []
  repos:
    - github.com/bors-ng/bors-ng:*
  workerPools:
    ci:
      owner: michael@notriddle.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 2
  grants:
    - grant: queue:create-task:highest:proj-bors-ng/ci
      to: repo:github.com/bors-ng/bors-ng:*

servo:
  adminRoles: [github-team:servo/taskcluster-admins]
  externallyManaged: true
  repos:
    - github.com/servo/servo:*
  workerPools:
    docker:
      owner: servo-ops@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      machineType: "zones/{zone}/machineTypes/n1-highcpu-16"
      diskSizeGb: 100
      minCapacity: 2
      maxCapacity: 40
    docker-untrusted:
      owner: servo-ops@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      machineType: "zones/{zone}/machineTypes/n1-highcpu-16"
      diskSizeGb: 100
      minCapacity: 0
      maxCapacity: 10
  grants:
    - grant:
        # notification
        - queue:route:notify.irc-channel.#servo.*

        # treeherder submission
        - queue:route:tc-treeherder-staging.v2._/servo-*
        - queue:route:tc-treeherder.v2._/servo-*
      # Grant to admins, purpose-specific roles are externally managed
      to: project-admin:servo

firefoxreality:
  adminRoles:
    - github-org-admin:MozillaReality
  repos:
    - github.com/MozillaReality/FirefoxReality:*
    - github.com/MozillaReality/FirefoxRealityPC:*
  secrets:
    # FirefoxReality secrets
    fr/github-deploy-key: true
    fr/release-signing-token: true
    fr/staging-signing-token: true
    fr/symbols-token: true

    # FirefoxRealityPC secrets
    frpc/github-deploy-key: true
    frpc/unity-config: true
  workerPools:
    ci-linux:
      owner: nobody@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 6
  grants:
    # General repo permissions
    - grant:
        - queue:create-task:highest:proj-firefoxreality/ci-linux
        - queue:route:notify.email.fxr-releng@mozilla.com.*
      to:
        - repo:github.com/MozillaReality/FirefoxReality:*
        - repo:github.com/MozillaReality/FirefoxRealityPC:*

    # Firefox Reality
    - grant:
        - secrets:get:project/firefoxreality/fr/github-deploy-key
        - secrets:get:project/firefoxreality/fr/key-password
        - secrets:get:project/firefoxreality/fr/keystore-password
        - secrets:get:project/firefoxreality/fr/preview-keystore
        - secrets:get:project/firefoxreality/fr/symbols-token
      to: project:firefoxreality:common-secrets
    - grant:
        - assume:project:firefoxreality:common-secrets
        - secrets:get:project/firefoxreality/fr/staging-signing-token
      to:
        - repo:github.com/MozillaReality/FirefoxReality:branch:master
        - repo:github.com/MozillaReality/FirefoxReality:branch:feature/*
    - grant:
        - assume:project:firefoxreality:common-secrets
        - secrets:get:project/firefoxreality/fr/release-signing-token
      to:
        - repo:github.com/MozillaReality/FirefoxReality:release

    # Firefox Reality PC
    - grant: secrets:get:project/firefoxreality/frpc/github-deploy-key
      to: repo:github.com/MozillaReality/FirefoxRealityPC:branch:*

releng:
  adminRoles:
    - github-team:mozilla-releng/releng
  repos:
    - github.com/mozilla-releng/*
  workerPools:
    ci:
      owner: release@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 10
  grants:
    - grant: queue:create-task:highest:proj-releng/*
      to: repo:github.com/mozilla-releng/*

# catch-all repo for simple mozilla projects
# if you need more complexity, talk to the taskcluster team!
misc:
  adminRoles:
    - github-team:taskcluster/core
  repos:
    - github.com/mozilla/*
    - github.com/marco-c/taskcluster_yml_validator:*
    - github.com/mozilla/one-off-system-add-ons:*
  workerPools:
    ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 20
  hooks:
    jcristau-fx-release-metrics:
      description: Taskcluster hook to run fx release metrics
      owner: jcristau@mozilla.com
      emailOnError: true
      schedule: ['0 0 8 * * *']
      task:
        provisionerId: proj-misc
        workerType: ci
        payload:
          image: debian:10
          features:
            taskclusterProxy: true
          command:
            - /bin/bash
            - -c
            - >-
              apt-get update &&
              apt-get -y install git mercurial python3-requests &&
              git clone https://github.com/jcristau/fx-release-metrics/ &&
              cd fx-release-metrics &&
              python3 run-taskcluster.py
          maxRunTime: 1200
          artifacts:
            public/results.json:
              type: file
              path: "/results.json"
          env:
            PREVIOUS_RESULTS: https://community-tc.services.mozilla.com/api/index/v1/task/project.misc.jcristau.fx-release-metrics.latest/artifacts/public/results.json
        routes:
          - index.project.misc.jcristau.fx-release-metrics.latest
          - notify.email.jcristau@mozilla.com.on-failed
        scopes:
          - queue:route:index.project.misc.jcristau.fx-release-metrics.latest
          - queue:route:notify.email.jcristau@mozilla.com.*
        metadata:
          name: fx release metrics
          description: Taskcluster hook to run fx release metrics
          owner: jcristau@mozilla.com
          source: https://github.com/jcristau/fx-release-metrics/blob/master/hook.json

  grants:
    - grant: queue:create-task:highest:proj-misc/ci
      to:
        - repo:github.com/mozilla/*
        - repo:github.com/marco-c/taskcluster_yml_validator:*
    - grant:
        - queue:create-task:highest:proj-misc/ci
        - queue:route:index.project.misc.jcristau.*
        - queue:route:notify.email.jcristau@mozilla.com.*
        - queue:scheduler-id:-
      to:
        - hook-id:project-misc/jcristau-fx-release-metrics
    # allow jcristau to trigger the release-metrics hook directly
    - grant:
        - hooks:trigger-hook:project-misc/jcristau-fx-release-metrics
      to:
        - login-identity:github/3703806|jcristau

fuzzing:
  adminRoles:
    - github-team:MozillaSecurity/tc-admin
  repos:
    - github.com/MozillaSecurity/*
  secrets:
    codecov-fuzzfetch: true
    codecov-fuzzmanager: true
    credstash-aws-auth: true
    deploy-bearspray: true
    deploy-fuzzing-tc-config: true
    docker-hub: true
    pypi: true
    decision: true
  workerPools:
    ci:
      owner: fuzzing+taskcluster@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        dockerConfig:
          allowPrivileged: true
    decision:
      owner: fuzzing+taskcluster@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 10
    generic-worker-ubuntu-18-04-podman:
      owner: fuzzing+taskcluster@mozilla.com
      emailOnError: false
      imageset: generic-worker-ubuntu-18-04-podman
      cloud: aws
      minCapacity: 0
      maxCapacity: 10

  hooks:
    decision:
      description: Hook to trigger the Fuzzing decision task
      owner: fuzzing+taskcluster@mozilla.com
      emailOnError: true
      schedule:
        - "0 0 */1 * * *"
      task:
        provisionerId: proj-fuzzing
        workerType: decision
        scopes:
          - secrets:get:project/fuzzing/decision
          - queue:scheduler-id:-
          - queue:create-task:medium:proj-fuzzing/decision
        payload:
          image: mozillasecurity/fuzzing-tc:latest
          features:
            taskclusterProxy: true
          env:
            TASKCLUSTER_SECRET: project/fuzzing/decision
          maxRunTime: 1200
        metadata:
          name: Fuzzing decision task
          description: Create fuzzing task on Mozilla Firefox builds
          owner: fuzzing+taskcluster@mozilla.com
          source: https://github.com/mozillasecurity/fuzzing-tc-config

  grants:
    - grant:
        - queue:create-task:highest:proj-fuzzing/ci
        - secrets:get:project/fuzzing/deploy-*
        - secrets:get:project/fuzzing/codecov-*
        - secrets:get:project/fuzzing/pypi
        - secrets:get:project/fuzzing/ci-*
      to:
        - repo:github.com/MozillaSecurity/*
    - grant:
        - docker-worker:capability:privileged
      to:
        - repo:github.com/MozillaSecurity/fuzzing-tc:*
    - grant:
        - secrets:get:project/fuzzing/deploy-fuzzing-tc-config
        - secrets:get:project/fuzzing/decision
        - queue:scheduler-id:-
        - queue:create-task:highest:proj-fuzzing/decision
      to: hook-id:project-fuzzing/decision

git-cinnabar:
  adminRoles:
    - login-identity:github/1038527|glandium
  repos:
    - github.com/glandium/git-cinnabar:*
  secrets:
    codecov: true
  workerPools:
    ci:
      imageset: docker-worker
      cloud: gcp
      maxCapacity: 5
    win2012r2:
      imageset: generic-worker-win2012r2
      cloud: aws
      maxCapacity: 2
  clients:
    worker-osx-10-10:
      scopes:
        - assume:worker-pool:proj-git-cinnabar/osx-10-10
        - assume:worker-id:proj-git-cinnabar/travis-*
    worker-osx-10-11:
      scopes:
        - assume:worker-pool:proj-git-cinnabar/osx-10-11
        - assume:worker-id:proj-git-cinnabar/travis-*
  grants:
    - grant:
        - queue:create-task:highest:proj-git-cinnabar/ci
        - queue:create-task:highest:proj-git-cinnabar/win2012r2
        # these two workerTypes are implemented in Travis-CI (!)
        - queue:create-task:highest:proj-git-cinnabar/osx-10-10
        - queue:create-task:highest:proj-git-cinnabar/osx-10-11
        - queue:scheduler-id:taskcluster-github
      to:
        - repo:github.com/glandium/git-cinnabar:decision-task

    - grant: assume:repo:github.com/glandium/git-cinnabar:decision-task
      to: repo:github.com/glandium/git-cinnabar:pull-request

    - grant:
        - assume:repo:github.com/glandium/git-cinnabar:decision-task
        - secrets:get:project/git-cinnabar/codecov
        - queue:route:index.project.git-cinnabar.*
      to:
        - repo:github.com/glandium/git-cinnabar:release
        - repo:github.com/glandium/git-cinnabar:branch:*
        - repo:github.com/glandium/git-cinnabar:tag:*

wpt:
  adminRoles:
    - github-team:web-platform-tests/admins
  workerPools:
    ci:
      imageset: docker-worker
      cloud: gcp
      maxCapacity: 80
      workerConfig:
        dockerConfig:
          allowPrivileged: true
  repos:
    - github.com/web-platform-tests/*
  grants:
    - grant:
        - queue:create-task:highest:proj-wpt/ci
        - docker-worker:capability:privileged
        - queue:scheduler-id:taskcluster-github
      to: repo:github.com/web-platform-tests/wpt:*

relman:
  adminRoles:
    - github-team:mozilla/sallt
  externallyManaged: true # bugbug deploys some hooks into this space
  repos:
    - github.com/mozilla/bugbug:*
    - github.com/mozilla/microannotate:*
    - github.com/mozilla/bugzilla-dashboard-backend:*
    - github.com/mozilla/task-boot:*
    - github.com/mozilla/code-coverage:*
    - github.com/mozilla/code-review:*
    - github.com/mozilla/rust-code-analysis:*
    - github.com/mozilla/dump_syms:*
    - github.com/mozilla/libmozevent:*
  clients:
    bugbug/code-review-production:
      scopes:
        - hooks:trigger-hook:project-relman/bugbug-*
        - notify:email:*
    bugbug/code-review-testing:
      scopes:
        - hooks:trigger-hook:project-relman/bugbug-*
        - notify:email:*
  workerPools:
    ci:
      owner: mcastelluccio@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 50
      workerConfig:
        dockerConfig:
          allowPrivileged: true
    compute-small:
      owner: mcastelluccio@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 25
      machineType: "zones/{zone}/machineTypes/n1-standard-4"
    compute-large:
      owner: mcastelluccio@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 25
      machineType: "zones/{zone}/machineTypes/n1-standard-8"
    compute-large-regressor-finder:
      owner: mcastelluccio@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 25
      machineType: "zones/{zone}/machineTypes/n1-standard-8"
    compute-super-large:
      owner: mcastelluccio@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 1
      maxCapacity: 25
      machineType: "zones/{zone}/machineTypes/n1-standard-16"
  secrets:
    bugbug/deploy: true
    bugbug/integration: true
    bugbug/production: true
    bugbug/testing: true
    bugzilla-dashboard-backend/deploy-production: true
    bugzilla-dashboard-backend/deploy-testing: true
    code-coverage/release: true
    code-coverage/deploy-production: true
    code-coverage/deploy-testing: true
    code-coverage/dev: true
    code-review/deploy-dev: true
    code-review/deploy-production: true
    code-review/deploy-testing: true
    code-review/release: true
    dump_syms/deploy: true
    microannotate/deploy: true
    taskboot/deploy: true
    libmozevent/deploy: true
    rust-code-analysis/deploy: true
  grants:
    # all repos
    - grant:
        - queue:create-task:highest:proj-relman/ci
        - queue:route:statuses
      to:
        - repo:github.com/mozilla/bugbug:*
        - repo:github.com/mozilla/microannotate:*
        - repo:github.com/mozilla/task-boot:*
        - repo:github.com/mozilla/code-coverage:*
        - repo:github.com/mozilla/code-review:*
        - repo:github.com/mozilla/rust-code-analysis:*
        - repo:github.com/mozilla/bugzilla-dashboard-backend:*
        - repo:github.com/mozilla/dump_syms:*
        - repo:github.com/mozilla/libmozevent:*

    # all hooks
    - grant:
        - queue:scheduler-id:-
        - queue:create-task:highest:proj-relman/*
      to: hook-id:project-relman/*

    # bugzilla-dashboard-backend
    - grant: docker-worker:capability:privileged
      to: repo:github.com/mozilla/bugzilla-dashboard-backend:*
    - grant: secrets:get:project/relman/bugzilla-dashboard-backend/deploy-production
      to: repo:github.com/mozilla/bugzilla-dashboard-backend:branch:production
    - grant: secrets:get:project/relman/bugzilla-dashboard-backend/deploy-testing
      to: repo:github.com/mozilla/bugzilla-dashboard-backend:branch:testing

    # bugbug
    - grant:
        - docker-worker:cache:bugbug-*
        - docker-worker:capability:privileged
        - secrets:get:project/relman/bugbug/integration
      to: project:relman:bugbug/build
    - grant:
        - secrets:get:project/relman/bugbug/deploy
      to: project:relman:bugbug/deploy
    - grant: assume:project:relman:bugbug/build
      to: repo:github.com/mozilla/bugbug:*
    # The build scopes for the tag will come from the previous rule.
    - grant:
        - assume:project:relman:bugbug/deploy
        - assume:hook-id:project-relman/bugbug
        - hooks:modify-hook:project-relman/bugbug
      to: repo:github.com/mozilla/bugbug:tag:*
    - grant:
        - assume:project:relman:bugbug/build
        - hooks:trigger-hook:project-relman/bugbug*
        - queue:route:notify.email.*
        - queue:route:notify.irc-channel.#bugbug.on-failed
        - queue:route:index.project.relman.bugbug*
        - queue:route:notify.pulse.route.project.relman.bugbug.*
        - queue:route:project.relman.bugbug.*
        - secrets:get:project/relman/bugbug/production
      to: hook-id:project-relman/bugbug*
    - grant:
        - assume:project:relman:bugbug/deploy
        - assume:hook-id:project-relman/bugbug-*
        - hooks:modify-hook:project-relman/bugbug-*
      to: hook-id:project-relman/bugbug

    # task-boot
    - grant: docker-worker:capability:privileged
      to: repo:github.com/mozilla/task-boot:*
    - grant: secrets:get:project/relman/taskboot/deploy
      to:
        - repo:github.com/mozilla/task-boot:branch:master
        - repo:github.com/mozilla/task-boot:tag:*

    # code-coverage
    - grant: docker-worker:capability:privileged
      to: repo:github.com/mozilla/code-coverage:*
    - grant: secrets:get:project/relman/code-coverage/deploy-production
      to: repo:github.com/mozilla/code-coverage:branch:production
    - grant: secrets:get:project/relman/code-coverage/deploy-testing
      to: repo:github.com/mozilla/code-coverage:branch:testing
    - grant: secrets:get:project/relman/code-coverage/release
      to: repo:github.com/mozilla/code-coverage:tag:*

    # code-review
    - grant: docker-worker:capability:privileged
      to: repo:github.com/mozilla/code-review:*
    - grant:
        - secrets:get:project/relman/code-review/deploy-production
        - assume:hook-id:project-relman/code-review-integration-production
        - hooks:modify-hook:project-relman/code-review-integration-production
      to: repo:github.com/mozilla/code-review:branch:production
    - grant:
        - secrets:get:project/relman/code-review/deploy-testing
        - assume:hook-id:project-relman/code-review-integration-testing
        - hooks:modify-hook:project-relman/code-review-integration-testing
      to: repo:github.com/mozilla/code-review:branch:testing
    - grant: secrets:get:project/relman/code-review/release
      to: repo:github.com/mozilla/code-review:tag:*
    - grant:
        - notify:email:*
        - secrets:get:project/relman/code-review/integration-testing
        - docker-worker:cache:code-review-integration-testing
      to: hook-id:project-relman/code-review-integration-testing
    - grant:
        - notify:email:*
        - secrets:get:project/relman/code-review/integration-production
        - docker-worker:cache:code-review-integration-production
      to: hook-id:project-relman/code-review-integration-production

    # dump_syms
    - grant: secrets:get:project/relman/dump_syms/deploy
      to: repo:github.com/mozilla/dump_syms:tag:*

    # micoannotate
    - grant: secrets:get:project/relman/microannotate/deploy
      to: repo:github.com/mozilla/microannotate:tag:*

    # libmozevent
    - grant: secrets:get:project/relman/libmozevent/deploy
      to:
        - repo:github.com/mozilla/libmozevent:tag:*

    # rust-code-analysis
    - grant: secrets:get:project/relman/rust-code-analysis/deploy
      to: repo:github.com/mozilla/rust-code-analysis:tag:*

deepspeech:
  adminRoles:
    - github-team:mozilla/research-machine-learning
  repos:
    - github.com/mozilla/DeepSpeech:*
    - github.com/mozilla/tensorflow:*
  workerPools:
    ci:
      owner: deepspeech@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 96
      machineType: "zones/{zone}/machineTypes/n1-standard-32"
    win:
      owner: deepspeech@mozilla.com
      emailOnError: false
      imageset: deepspeech-win2012r2
      cloud: aws
      instanceTypes:
        m5d.2xlarge: 1
      maxCapacity: 16
    win-b:
      owner: deepspeech@mozilla.com
      emailOnError: false
      imageset: deepspeech-win2012r2
      cloud: aws
      instanceTypes:
        m5d.2xlarge: 1
      maxCapacity: 16
  clients:
    worker/rpi3bp-1:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/rpi3bp-2:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/rpi3bp-3:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/rpi3bp-4:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/rpi3bp-5:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/rpi3bp-6:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-rpi3-*
        - assume:worker-pool:proj-deepspeech/ds-rpi3
    worker/lepotato-1:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/lepotato-2:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/lepotato-3:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/lepotato-4:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/lepotato-5:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/lepotato-6:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-lepotato-*
        - assume:worker-pool:proj-deepspeech/ds-lepotato
    worker/macos-heavy-1:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-heavy-*
        - assume:worker-pool:proj-deepspeech/ds-macos-heavy
    worker/macos-heavy-2:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-heavy-*
        - assume:worker-pool:proj-deepspeech/ds-macos-heavy
    worker/macos-heavy-3:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-heavy-*
        - assume:worker-pool:proj-deepspeech/ds-macos-heavy
    worker/macos-heavy-4:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-heavy-*
        - assume:worker-pool:proj-deepspeech/ds-macos-heavy
    worker/macos-light-1:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-2:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-3:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-4:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-5:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-6:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-7:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-8:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-9:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-10:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-11:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/macos-light-12:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-macos-light-*
        - assume:worker-pool:proj-deepspeech/ds-macos-light
    worker/pkguploader:
      scopes:
        - assume:worker-id:proj-deepspeech/ds-scriptworker-*
        - assume:worker-pool:proj-deepspeech/ds-scriptworker
  grants:
    - grant:
        - queue:create-task:highest:proj-deepspeech/*
        # decision task:
        # https://github.com/mozilla/tensorflow/blob/master/tc-schedule.sh
        # =>
        # https://github.com/lissyx/taskcluster-github-decision/blob/master/tc-decision.py
        - queue:scheduler-id:taskcluster-github
        - queue:route:index.project.deepspeech.*
        - queue:route:notify.irc-channel.*
        - generic-worker:cache:deepspeech-*
      to:
        - repo:github.com/mozilla/DeepSpeech:*
        - repo:github.com/mozilla/tensorflow:*
    - grant:
        - generic-worker:allow-rdp:proj-deepspeech/*
      to:
        - project-admin:deepspeech
  secrets:
    ssh-keys/deepspeech-win: true
    ssh-keys/deepspeech-win-b: true

webrender:
  adminRoles:
    - login-identity:github/27658|jdm
    - login-identity:github/332653|jrmuizel
    - login-identity:github/485789|staktrace
    - login-identity:github/39062770|gw3583
  repos:
    - github.com/servo/webrender:*
    - github.com/staktrace/webrender:*
  workerPools:
    ci-linux:
      owner: kats@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 2
  clients:
    macos:
      scopes:
        - assume:worker-pool:proj-webrender/ci-macos
        - assume:worker-id:proj-webrender/*
  grants:
    - grant:
        - queue:create-task:highest:proj-webrender/ci-linux
        - queue:create-task:highest:proj-webrender/ci-macos
        - queue:route:index.project.webrender.ci.*
      to:
        - repo:github.com/servo/webrender:*
        - repo:github.com/staktrace/webrender:*
  secrets:
    wrupdater-github-token: true

l10n:
  adminRoles:
    - github-team:mozilla-l10n/Core
  repos:
    - github.com/Pike/user-journey-localized:*
    - github.com/mozilla-l10n/*
  workerPools:
    ci:
      imageset: docker-worker
      cloud: gcp
      maxCapacity: 5
  grants:
    - grant:
        - queue:create-task:highest:proj-l10n/*
      to:
        - repo:github.com/Pike/user-journey-localized:*
        - repo:github.com/mozilla-l10n/*
