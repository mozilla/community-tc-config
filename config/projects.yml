# "Projects", as defined in https://docs.taskcluster.net/docs/manual/using/namespaces#projects
#
# Each project is a distinct namespace within the deployment, with access to its own resources.
# In particular, each project has its own workers. A project also has a set of administrators
# defined by user roles.
#
# Each entry in this file is defined as follows:
#
# <project-name>:
#   adminRoles:
#     # roles with administrative access to the project's resources
#     - role1
#     - ..
#
#   # "externally managed" means that the resources in this project are managed outside
#   # of this repository.  If this is not set, then this repository will try to delete
#   # any such externally-managed resources.
#   externallyManaged: false
#
#   repos:
#     # repositories over which project admins have control; this is a prefix of a tc-github
#     # repository roleId, so it should end in `:*` to select a specific repository, or `/*`
#     # for an organization:
#     - github.com/org/*
#     - github.com/org/repo:*
#
#   workerPools:
#     <worker-pool-name>:
#       owner: ..
#       emailOnError: ..
#       type: <name of a function in `generate/workers.py`)
#       ..: ..  # arguments to that function
#
#   clients:
#     <clientId-suffix>:  # suffix after `project/<project-name>/`
#       scopes: [ .. ]
#       description: ..   # optional
#
#   grants:  # (same format as grants.yml)
#
# The worker-pool configurations are defined by Python functions, keyed by the `type` property.
# See that file for the available options.  The defaults are usually fine.

taskcluster:
  adminRoles:
    - github-team:taskcluster/core
  repos:
    - github.com/taskcluster/*
    - github.com/mozilla/community-tc-config:*
  workerPools:
    ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      type: standard_gcp_docker_worker
      minCapacity: 1
      maxCapacity: 20
      privileged: true
  grants:
    - grant:
        - queue:create-task:highest:proj-taskcluster/ci
        # The account and secret for the Azure testing storage account.
        # This is secret but ok for use by PRs.
        - secrets:get:project/taskcluster/testing/azure
      to: repo:github.com/taskcluster/*

    - grant:
        - secrets:get:project/taskcluster/testing/codecov
        - secrets:get:project/taskcluster/testing/taskcluster-*
        - docker-worker:cache:taskcluster-*
      to: repo:github.com/taskcluster/taskcluster:*

    - grant:
        # pushes to monorepo master can notify on failure
        - queue:route:notify.email.taskcluster-internal@mozilla.com.*
        - queue:route:notify.irc-channel.#taskcluster-bots.*
      to: repo:github.com/taskcluster/taskcluster:branch:master

    - grant:
        - assume:project:taskcluster:worker-test-scopes
        - assume:worker-id:docker-worker/docker-worker
        - auth:sentry:test-dummy-worker
        - auth:statsum:test-dummy-worker
        - aws-provisioner:create-secret:*
        - docker-worker:cache:docker-worker-garbage-*
        - docker-worker:cache:docker-worker-garbage-caches-test-cache
        - docker-worker:cache:docker-worker-garbage-caches-tmp-obj-dir
        - docker-worker:capability:device:loopbackAudio
        - docker-worker:capability:device:loopbackVideo
        - docker-worker:capability:privileged
        - docker-worker:feature:balrogStageVPNProxy
        - docker-worker:feature:balrogVPNProxy
        - docker-worker:image:localhost:*
        - docker-worker:image:localhost:*/testuser/busybox:latest
        - purge-cache:no-provisioning-nope/*
        - queue:cancel-task
        - queue:cancel-task:docker-worker-tests/*
        - queue:claim-task
        - queue:claim-task:null-provisioner/*
        - queue:claim-work:no-provisioning-nope/*
        - queue:claim-work:test-dummy-provisioner/dummy-worker-*
        - queue:create-artifact:*
        - queue:create-artifact:custom
        - queue:create-task:no-provisioning-nope/*
        - queue:create-task:null-provisioner/*
        - queue:create-task:proj-taskcluster/ci
        - queue:create-task:test-dummy-provisioner/dummy-worker-*
        - queue:define-task:test-dummy-provisioner/dummy-worker-*
        - queue:get-artifact:SampleArtifacts/_/X.txt
        - queue:get-artifact:private/docker-worker-tests/*
        - queue:poll-task-urls:test-dummy-provisioner/dummy-worker-*
        - queue:resolve-task
        - queue:schedule-task:test-dummy-scheduler/*
        - queue:scheduler-id:docker-worker-tests
        - queue:task-group-id:test-dummy-scheduler/*
        - queue:worker-id:docker-worker/docker-worker
        - queue:worker-id:random-local-worker/dummy-worker-*
        - queue:worker-id:test-dummy-workers/dummy-worker-*
        - secrets:get:project/taskcluster/taskcluster-worker/stateless-dns
        - secrets:get:project/taskcluster/testing/docker-worker/ci-creds
        - secrets:get:project/taskcluster/testing/docker-worker/pulse-creds
      to: repo:github.com/taskcluster/docker-worker:*

  clients:
    # JF0BcOaZQOanwCNfLTyZwwm3KQ3zPFR1-wGHzPoDHlNw
    docker-worker/ci:
      scopes:
        - assume:repo:github.com/taskcluster/docker-worker:*

bors-ng:
  adminRoles: []
  repos:
    - github.com/bors-ng/bors-ng:*
  workerPools:
    ci:
      owner: michael@notriddle.com
      emailOnError: false
      type: standard_gcp_docker_worker
      minCapacity: 0
      maxCapacity: 2
  grants:
    - grant: queue:create-task:highest:proj-bors-ng/ci
      to: repo:github.com/bors-ng/bors-ng:*

servo:
  adminRoles: [github-team:servo/taskcluster-admins]
  externallyManaged: true
  repos: 
    - github.com/servo/*
  workerPools:
    ci:
      owner: nobody@mozilla.com
      emailOnError: false
      type: standard_gcp_docker_worker
      minCapacity: 0
      maxCapacity: 2

redo:
  adminRoles: []
  repos:
    - github.com/mozilla-releng/redo:*
  workerPools:
    ci:
      owner: bhearsum@mozilla.com
      emailOnError: false
      type: standard_gcp_docker_worker
      minCapacity: 0
      maxCapacity: 2
  grants:
    - grant: queue:create-task:highest:proj-redo/ci
      to: repo:github.com/mozilla-releng/redo:*

# catch-all repo for simple mozilla projects
# if you need more complexity, talk to the taskcluster team!
misc:
  adminRoles:
    - github-team:taskcluster/core
  repos:
    - github.com/mozilla/*
  workerPools:
    ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      type: standard_gcp_docker_worker
      minCapacity: 1
      maxCapacity: 20
  grants:
    - grant: queue:create-task:highest:proj-misc/ci
      to: repo:github.com/mozilla/*
